{"version":3,"file":"static/js/799.365e002e.chunk.js","mappings":"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","sources":["Components/MovieCard/MovieCard.jsx","Components/header/Header.js","Components/MovieList/MovieList.js","Components/Pagination/Pagination.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FaHeart } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMovieToList, removeMovieFromList } from \"../../Store/Slices/FavoritesSlice.js\";\n\nfunction MovieCard({ movie }) {\n  const dispatch = useDispatch();\n  const isFavorite = useSelector((state) => \n    state.favList.favList.some((favMovie) => favMovie?.id === movie?.id)\n  );\n  const [isFavoriteLocal, setIsFavoriteLocal] = useState(isFavorite);\n\n  useEffect(() => {\n    setIsFavoriteLocal(isFavorite);\n  }, [isFavorite]);\n\n  const handleClick = () => {\n    setIsFavoriteLocal((prev) => {\n      const newFavoriteStatus = !prev;\n      if (newFavoriteStatus) {\n        dispatch(addMovieToList(movie));\n      } else {\n        dispatch(removeMovieFromList(movie.id));\n      }\n      return newFavoriteStatus;\n    });\n  };\n\n  const currentTheme = document.body.classList.contains(\"dark-mode\") ? \"darkmode\" : \"lightmode\";\n  \n  const getBorderColor = (rating) => {\n    if (rating >= 80) return \"#00ff00\";\n    if (rating >= 60) return \"yellow\";\n    if (rating >= 50) return \"orange\";\n    return \"red\";\n  };\n\n  const rating = Math.round(movie.vote_average * 10);\n  const borderColor = getBorderColor(rating);\n\n  const ratingCircleStyle = {\n    position: \"absolute\",\n    bottom: \"-15px\",\n    border: `5px solid ${borderColor}`,\n    left: \"10px\",\n    width: \"40px\",\n    height: \"40px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"#1e2533\",\n    color: \"#87ceeb\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n  };\n\n  return (\n    <div style={cardStyle[currentTheme]}>\n      <div style={imageWrapperStyle}>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : \"default-poster-path.jpg\"\n          }\n          alt={movie.title}\n          style={imageStyle}\n        />\n        <div style={ratingCircleStyle}>\n          <span>{rating}</span>\n        </div>\n      </div>\n      <div style={cardContentStyle}>\n        <h3 style={titleStyle}>{movie.title}</h3>\n        <p style={dateStyle}>{new Date(movie.release_date).toDateString()}</p>\n        <div style={favoriteWrapperStyle}>\n          <FaHeart\n            style={{\n              color: isFavoriteLocal ? \"#ffeb3b\" : \"gray\",\n              fontSize: \"20px\",\n              cursor: \"pointer\",\n            }}\n            onClick={handleClick}\n          />\n        </div>\n        <Link to={`/movie/${movie.id}`}>\n          <button className=\"btn btn-outline-warning mb-3\">View Details</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nconst cardStyle = {\n  lightmode: {\n\n    border:\"1px solid white\",\n    color:\"black\",\n    width: \"200px\",\n    backgroundColor: \"white\",\n    borderRadius: \"10px\",\n    overflow: \"hidden\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    margin: \"10px\",\n    textAlign: \"center\",\n    position: \"relative\",\n  },\n  darkmode: {\n    width: \"200px\",\n    backgroundColor: \"#333\",\n    borderRadius: \"10px\",\n    overflow: \"hidden\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    margin: \"10px\",\n    textAlign: \"center\",\n    position: \"relative\",\n    color: \"white\",\n  },\n};\n\nconst imageWrapperStyle = {\n  position: \"relative\",\n  borderRadius: \"15px\",\n};\n\nconst imageStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  objectFit: \"cover\",\n  marginBottom: \"10px\",\n};\n\nconst cardContentStyle = {\n  padding: \"10px\",\n  position: \"relative\",\n};\n\nconst titleStyle = {\n  marginTop: \"15px\",\n  fontSize: \"18px\",\n  height: \"50px\",\n  marginBottom: \"15px\",\n};\n\nconst dateStyle = {\n  marginBottom: \"10px\",\n  fontSize: \"14px\",\n  color: \"#888\",\n};\n\nconst favoriteWrapperStyle = {\n  position: \"absolute\",\n  bottom: \"35px\",\n  right: \"10px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nexport default MovieCard;\n","import React, { useState, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Header({ onSearch }) {\n  const searchInputRef = useRef(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const currentTheme = document.body.classList.contains(\"dark-mode\") ? \"darkmode\" : \"lightmode\";\n\n  const handleChange = (e) => {\n    setSearchQuery(e.target.value);\n    onSearch(e.target.value); \n  };\n\n  const handleSearch = () => {\n    const query = searchInputRef.current.value;\n    onSearch(query);\n    setSearchQuery(''); \n    searchInputRef.current.value = ''; \n  };\n\n  return (\n    <header className='headBar' style={headerStyle[currentTheme]}>\n      <div style={containerStyle[currentTheme]}>\n        <h1>Welcome to our movie app</h1>\n        <p>Millions of movies, TV shows, and people to discover. Explore now.</p>\n        <div style={searchContainerStyle[currentTheme]}>\n          <input\n            ref={searchInputRef}\n            type=\"text\"\n            placeholder=\"Search\"\n            value={searchQuery}\n            onChange={handleChange}\n            onKeyDown={(e) => e.key === 'Enter' && handleSearch()}\n            style={searchBarStyle[currentTheme]}\n          />\n          <button onClick={handleSearch} style={searchButtonStyle}>Search</button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  lightmode: {\n    backgroundColor: '#f1f1f1',\n    padding: '20px',\n    color: \"black\",\n  },\n  darkmode: {\n    backgroundColor: '#333',\n    padding: '20px',\n    color: 'white',\n  }\n};\n\nconst containerStyle = {\n  lightmode: {\n    maxWidth: '1200px',\n    margin: 'auto',\n    textAlign: 'left',\n    paddingLeft: '10px',\n    backgroundColor: '#f1f1f1',\n    color: \"black\",\n  },\n  darkmode: {\n    maxWidth: '1200px',\n    margin: 'auto',\n    textAlign: 'left',\n    paddingLeft: '10px',\n    backgroundColor: '#333',\n    color: 'white',\n  }\n};\n\nconst searchContainerStyle = {\n  lightmode: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '10px',\n    backgroundColor: '#f1f1f1',\n    color: \"black\",\n  },\n  darkmode: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '10px',\n    backgroundColor: '#333',\n    color: 'white',\n  }\n};\n\nconst searchBarStyle = {\n  darkmode: {\n    flex: '1',\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n    marginRight: '10px',\n    backgroundColor: 'black',\n    color: 'white',\n    fontFamily: 'Arial, sans-serif',\n    fontSize: '16px',\n    fontWeight: 'bold',\n  },\n  lightmode: {\n    flex: '1',\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n    marginRight: '10px',\n    backgroundColor: 'white',\n    color: 'black',\n    fontFamily: 'Arial, sans-serif',\n    fontSize: '16px',\n    fontWeight: 'bold',\n  }\n};\n\nconst searchButtonStyle = {\n  padding: '10px 20px',\n  color: '#333',\n  backgroundColor: \"#ffeb3b\",\n  border: '1px solid yellow',\n  borderRadius: '5px',\n  boxShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)',\n};\n\nexport default Header;\n","import React from \"react\";\r\nimport MovieCard from \"../../Components/MovieCard/MovieCard\";\r\n\r\nfunction MovieList({ movies }) {\r\n  return (\r\n    <div style={listStyle}>\r\n      {movies.map((movie) => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst listStyle = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\n\nfunction Pagination({ currentPage, totalPages, onPageChange }) {\n  const currentTheme = document.body.classList.contains(\"dark-mode\") ? \"darkmode\" : \"lightmode\";\n\n  return (\n    <div style={paginationContainerStyle[currentTheme]}>\n      <button\n        style={{\n          ...buttonStyle,\n          ...leftButtonStyle,\n          ...(currentPage === 1 && disabledButtonStyle),\n        }}\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        &lt;\n      </button>\n      <span style={pageInfoStyle}>\n        {currentPage} / {totalPages}\n      </span>\n      <button\n        style={{\n          ...buttonStyle,\n          ...rightButtonStyle,\n          ...(currentPage === totalPages && disabledButtonStyle),\n        }}\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n}\n\nconst paginationContainerStyle = {\n  lightmode: {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  backgroundColor: \"white\",\n  },\n  darkmode: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    backgroundColor: \"black\",\n  }\n};\n\nconst buttonStyle = {\n  backgroundColor: \"#ffeb3b\",\n  color: \"#1e2533\",\n  border: \"none\",\n  padding: \"10px 15px\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\",\n  fontWeight: \"bold\",\n  fontSize: \"16px\",\n  margin: \"0 5px\",\n  transition: \"background-color 0.3s ease\",\n};\n\nconst leftButtonStyle = {\n  borderTopLeftRadius: \"20px\",\n  borderBottomLeftRadius: \"20px\",\n};\n\nconst rightButtonStyle = {\n  borderTopRightRadius: \"20px\",\n  borderBottomRightRadius: \"20px\",\n};\n\nconst disabledButtonStyle = {\n  backgroundColor: \"#b3b3b3\",\n  cursor: \"not-allowed\",\n};\n\nconst pageInfoStyle = {\n  color: \"#ffeb3b\",\n  fontWeight: \"bold\",\n  fontSize: \"16px\",\n  margin: \"0 10px\",\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../../Components/header/Header\";\nimport MovieList from \"../../Components/MovieList/MovieList\";\nimport Pagination from \"../../Components/Pagination/Pagination\";\n\nconst MoviesPage = () => {\n  const [moviesData, setMoviesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const moviesPerPage = 12;\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/popular?api_key=d406d67947f4328b84625ac0a728bd14&page=${currentPage}`\n        );\n        const data = await response.json();\n        setMoviesData(data.results || []);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching the movies:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [currentPage]);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset to first page on new search\n  };\n\n  const filteredMovies = moviesData.filter(movie =>\n    movie.title.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const totalPages = Math.ceil(filteredMovies.length / moviesPerPage);\n\n  const handlePageChange = (page) => {\n    if (page > 0 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n\n  const currentMovies = filteredMovies.slice(\n    (currentPage - 1) * moviesPerPage,\n    currentPage * moviesPerPage\n  );\n\n  const currentTheme = document.body.classList.contains(\"dark-mode\") ? \"darkmode\" : \"lightmode\";\n  const notFoundStyle = {\n    fontSize: '50px',\n    color: currentTheme === 'darkmode' ? 'white' : 'grey',\n    textAlign: 'center',\n    marginTop: '20px',\n    fontWeight: 'bold',\n  };\n\n  return (\n    <div>\n      <Header onSearch={handleSearch} />\n      <section style={sectionStyle[currentTheme]}>\n        <h2>Popular Movies</h2>\n        {loading ? (\n          <p>Loading movies...</p>\n        ): filteredMovies.length === 0 ? (\n            <p style={notFoundStyle}>No Movies Found</p>\n        ) : (\n          <>\n            <MovieList movies={currentMovies} />\n            {filteredMovies.length > 0 && (\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPageChange={handlePageChange}\n              />\n            )}\n          </>\n        )}\n      </section>\n    </div>\n  );\n};\n\nconst sectionStyle = {\n  \n  lightmode: {\n    padding: \"20px\",\n    backgroundColor: \"#f8f9fa\",\n    color:\"black\",\n    \n  },\n  darkmode: {\n    padding: \"20px\",\n    backgroundColor: \"black\",\n    color: \"white\",\n  }\n};\n\n\nexport default MoviesPage;\n"],"names":["cardStyle","lightmode","border","color","width","backgroundColor","borderRadius","overflow","boxShadow","margin","textAlign","position","darkmode","imageWrapperStyle","imageStyle","height","objectFit","marginBottom","cardContentStyle","padding","titleStyle","marginTop","fontSize","dateStyle","favoriteWrapperStyle","bottom","right","display","justifyContent","alignItems","_ref","movie","dispatch","useDispatch","isFavorite","useSelector","state","favList","some","favMovie","id","isFavoriteLocal","setIsFavoriteLocal","useState","useEffect","currentTheme","document","body","classList","contains","rating","Math","round","vote_average","ratingCircleStyle","getBorderColor","left","fontWeight","_jsxs","style","children","_jsx","src","poster_path","alt","title","Date","release_date","toDateString","FaHeart","cursor","onClick","handleClick","prev","newFavoriteStatus","addMovieToList","removeMovieFromList","Link","to","className","headerStyle","containerStyle","maxWidth","paddingLeft","searchContainerStyle","searchBarStyle","flex","marginRight","fontFamily","searchButtonStyle","onSearch","searchInputRef","useRef","searchQuery","setSearchQuery","handleSearch","query","current","value","ref","type","placeholder","onChange","e","target","onKeyDown","key","listStyle","flexWrap","movies","map","MovieCard","paginationContainerStyle","buttonStyle","transition","leftButtonStyle","borderTopLeftRadius","borderBottomLeftRadius","rightButtonStyle","borderTopRightRadius","borderBottomRightRadius","disabledButtonStyle","pageInfoStyle","currentPage","totalPages","onPageChange","disabled","sectionStyle","MoviesPage","moviesData","setMoviesData","loading","setLoading","setCurrentPage","async","response","fetch","data","json","results","error","console","fetchMovies","filteredMovies","filter","toLowerCase","includes","ceil","length","currentMovies","slice","notFoundStyle","Header","_Fragment","MovieList","Pagination","page"],"sourceRoot":""}